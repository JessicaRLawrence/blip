from __future__ import division
import numpy as np
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import corner



def plotmaker(params,parameters, npar):

    '''
    Make posterior plots from the samples generated by tge mcmc/nested sampling algorithm.

    Parameters
    -----------

    params : dictionary
        Dictionary of config params 

    parameters: string
        Array or list of strings with names of the parameters

    npar : int
        Dimensionality of the parameter space
    '''

    post = np.loadtxt(params['out_dir'] + "/post_samples.txt")
   
   
    if len(params['truevals']) > 0:
        knowTrue = 1 ## Bit for whether we know the true vals or not
        truevals = params['truevals']
    else:
        knowTrue = 0 


    plotrange = [0.999]*npar

    if params['out_dir'][-1] != '/':
        params['out_dir'] = params['out_dir'] + '/'

    ## Make corner plots
    fig = corner.corner(post, range=plotrange, labels=parameters, quantiles=(0.16, 0.84),
                        smooth=None, smooth1d=None, show_titles=True,
                        title_kwargs={"fontsize": 12},label_kwargs={"fontsize": 14},
                        fill_contours=True, use_math_text=True, )


    # Put correct values
    # Extract the axes
    axes = np.array(fig.axes).reshape((npar, npar))
    for ii in range(npar):
        ax = axes[ii, ii]

        ## Draw truevals if they exist
        if knowTrue:
            ax.axvline(truevals[ii], color="g", label='true value')

    ## Save posterior
    plt.savefig(params['out_dir'] + 'corners.png', dpi=150)
    print "Posteriors plots printed in " + params['out_dir'] + "corners.png"
